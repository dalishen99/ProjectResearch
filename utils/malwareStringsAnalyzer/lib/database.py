import sqlite3
from datetime import datetime
import re

class Database(object):
    def __init__(self, malware_path):
        self.conn = sqlite3.connect('./db/results.db')
        self.cursor = self.conn.cursor()
        self.malware_name = malware_path.split("/")[-3:]
        del self.malware_name[1]
        self.malware_name = "-".join(self.malware_name) + "_"
        self.malware_name += datetime.now().strftime("%d-%m-%y_%H:%M:%S")
        #print self.malware_name
        self.cursor.execute('''CREATE TABLE [{}] (string text, extract text
                            , type text)'''
            .format(self.malware_name))

    def createEntry(self, string, extract, type):
        req = """INSERT INTO [{}](string, extract, type)
                VALUES(?, ?, ?)""".format(self.malware_name)
        self.cursor.execute(req, (string, extract, type))
        self.conn.commit()

    def close(self):
        self.conn.close()

    def getIpAddresses(self):
        req = """select extract from [{}] where type == \"ip\"""" \
                .format(self.malware_name)
        ips_db = self.cursor.execute(req)
        ips = []
        for ip in ips_db.fetchall():
            ips.append(ip[0].split(":")[0])
        return ips

    def getUrls(self):
        req = """select extract from [{}] where type == \"url\"""" \
                .format(self.malware_name)
        urls_db = self.cursor.execute(req)
        urls = []

        regexp = """(?:http|ftp)://[^ /]+"""
        pattern = re.compile(regexp)

        for url in urls_db.fetchall():
            url = url[0]
            if pattern.search(url) is None:
                continue
            urls.append(pattern.search(url).group())
        return urls
