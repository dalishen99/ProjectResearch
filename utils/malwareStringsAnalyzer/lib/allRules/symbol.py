from lib.rules import Rules
from lib.parser import Parser
import subprocess

class Symbol(Rules):
    def __init__(self, malware_path):
        Rules.__init__(self)
        self.type = "symbol"
        self.malware_path = malware_path

    def run_analysis(self, string_list):
        print "-> Symbol analysis is running"
        epur_string_list = []
        ret = subprocess.Popen(["readelf", "-s", self.malware_path],
                                stdout=subprocess.PIPE)
        readelf_output = ret.communicate()[0].split('\n')[3:]

        self.bar.init(string_list)
        for string in string_list:
            sym_found, specific_type = Parser.getSymbol(string, readelf_output)
            if sym_found != None:
                self.db.createEntry(string, sym_found,
                                    self.type + "-" + specific_type)
            else:
                epur_string_list.append(string)
            self.bar.update()
        self.bar.close()
        return epur_string_list
